@model Source_Control_Final_Assignment.Models.UserData

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Html.EnableClientValidation(true);
}

<h2 style="padding-top:30px;">Register</h2>


@using (Html.BeginForm("add", "Home", FormMethod.Post, new { enctype = "multipart/form-data", @id = "registerForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.fname, htmlAttributes: new { @class = "col-form-label col-lg-2" })
            <div class="col-lg-10">
                @Html.EditorFor(model => model.fname, new { htmlAttributes = new { @class = "form-control", @name = "fname" } })
                @Html.ValidationMessageFor(model => model.fname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mname, htmlAttributes: new { @class = "col-form-label col-lg-2" })
            <div class="col-lg-10">
                @Html.EditorFor(model => model.mname, new { htmlAttributes = new { @class = "form-control", @name = "mname" } })
                @Html.ValidationMessageFor(model => model.mname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lname, htmlAttributes: new { @class = "col-form-label col-lg-2" })
            <div class="col-lg-10">
                @Html.EditorFor(model => model.lname, new { htmlAttributes = new { @class = "form-control", @name = "lname" } })
                @Html.ValidationMessageFor(model => model.lname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.uname, htmlAttributes: new { @class = "col-form-label col-lg-2" })
            <div class="col-lg-10">
                @Html.EditorFor(model => model.uname, new { htmlAttributes = new { @class = "form-control", @name = "uname" } })
                @Html.ValidationMessageFor(model => model.uname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "col-form-label col-lg-2" })
            <div class="col-lg-10">
                @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control", @name = "age" } })
                @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.bday, htmlAttributes: new { @class = "col-form-label col-lg-2" })
            <div class="col-lg-10">
                @Html.EditorFor(model => model.bday, new { htmlAttributes = new { @type = "Date", @class = "form-control", @name = "bday" } })
                @Html.ValidationMessageFor(model => model.bday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "col-form-label col-lg-2" })
            <div class="col-lg-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", @name = "address" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contact, htmlAttributes: new { @class = "col-form-label col-lg-2" })
            <div class="col-lg-10">
                @Html.EditorFor(model => model.contact, new { htmlAttributes = new { @class = "form-control", @name = "contact" } })
                @Html.ValidationMessageFor(model => model.contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "col-form-label col-lg-2" })
            <div class="col-lg-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @name = "email" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "col-form-label col-lg-2" })
            <div class="col-lg-10">
                @Html.PasswordFor(model => model.password, new { htmlAttributes = new { @class = "form-control", @name = "password" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.confirm_password, htmlAttributes: new { @class = "col-form-label col-lg-2" })
            <div class="col-lg-10">
                @Html.PasswordFor(model => model.confirm_password, new { htmlAttributes = new { @class = "form-control", @name = "confirm_password" } })
                @Html.ValidationMessageFor(model => model.confirm_password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "col-form-label col-lg-2" })
            <div class="col-lg-10">
                <input type="file" name="image" class="form-control-file" />
                @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-lg-10">
                <input type="submit" value="Register" class="btn btn-primary" />
            </div>
        </div>
    </div>
    <div class="text-danger">
        @Html.ValidationSummary(false, "Please enter valid data and then register.")
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
